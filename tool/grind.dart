// Copyright (c) 2022, the ndarray project authors. Please see
// the CONTRIBUTORS file for details. All rights reserved. Use
// of this source code is governed by a MIT-style license
// that can be found in the LICENSE file.

import 'dart:io';

import 'package:grinder/grinder.dart';

import 'contributors.dart';
import 'copyright.dart';
import 'utils.dart';

main(args) => grind(args);

@DefaultTask('Initialize stuff.')
void init() {
  log('Initializing stuff...');
  final ffigen = PubApp.global('ffigen');
  if (!ffigen.isActivated) {
    log('Activating ffigen...');
    ffigen.activate();
  }
}

@Task('Generate/Update bindings to native code.')
@Depends(init)
void bindings([String configFile = 'ffigen.yaml']) {
  PubApp.global('ffigen').run(['--config', configFile]);
}

@Task('Compile stuff.')
@Depends(bindings)
void compile() {
  log('Compiling stuff...');
}

@Task('Format code.')
void format() {
  log('Formating Dart code...');
  run('dart', arguments: ['format', '--fix', 'lib/', 'tool/'], quiet: true);
  log('Formating C/C++ code...');
  final sources = run('find',
      arguments: ['src', '-iname', '*.h', '-o', '-iname', '*.c'], quiet: true);
  for (final source in sources.trim().split('\n')) {
    run('clang-format', arguments: ['-i', source], quiet: true);
  }
}

@Task('Deploy stuff.')
@Depends(compile)
void deploy() {
  log('Deploying stuff...');
}

@Task('List contributors in lexicographic order.')
void listContributors() {
  log('Extracting contributors...');
  final contributorsList = contributors();
  log('\nContributors founded:');
  contributorsList.forEach((contributor) => log(' * $contributor'));
}

@Task('Generate/update a CONTRIBUTORS file.')
void updateContributors() {
  log('Extracting contributors...');
  var contributorList = contributors().join('\n');
  log('Generating/Updating the CONTRIBUTORS file...');
  var contributorsFile = File('CONTRIBUTORS');
  var thisScript = relativePath(Platform.script);
  contributorsFile.writeAsString("""
# This file is generated by $thisScript.
#
# Contributors listed in alphabetical order.

$contributorList
""");
}

@Task('Generate/update the copyright headers.')
void copyrightHeaders() {
  log('Loading copyright.yaml...');
  final copyright = loadCopyright();
  log('Applying copyright headers');
  copyright.apply();
}
